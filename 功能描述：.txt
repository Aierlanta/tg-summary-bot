功能描述：
0：要能记录执行日志
1：可以调用多家的模型来总结信息
2：能附带话题开始时的消息链接，或者消息分开部分的链接例子
3：要能通过指令的方式调用读取从最新消息开始的多少条消息，用户可以通过私聊发送指令，指令的格式应该是在通过按钮选择了群组后，输入“/summary <消息条数>”的形式
4：把读取的消息以[time] [username] [message]的形式记录为txt文件，在每日的凌晨4点清理全部的txt文件
5：当用户发送总结指令，并指定总结从最新消息开始至倒数指定数量条数的消息时，bot开始读取消息，然后记录为上述的txt文档，然后把记录通过api发送给ai模型要求总结，然后返回ai模型的总结结果，如果返回给用户成功，则删除该txt文档，否则告诉用户总结失败，待用户输入再次总结的指令后，重新发送这份txt文档给ai模型要求总结，然后重复上述的逻辑，如果上述逻辑重复次数>3时，则告诉用户总结失败次数过多，不再尝试，然后往bot的执行日志中加入该执行错误的记录，日志中最好记录清楚用户发送的指令，要求总结的group name
6：bot可以记录用户的group list名单，用户可以通过按钮交互和新建输入的方式添加group，在用户未切换group设置之前，对用户输入的总结指令默认总结该群组的消息
7：bot可以记录用户的api base和api key，用户可以通过发送消息的方式来输入api base和api key，bot通过用户输入的api base和api key来调用ai模型的api
8：bot有一个用户白名单，只有在用户白名单中的用户才可以调用这个bot，如果用户不在白名单，则提示用户不在白名单中
9：当用户往自己的group list中添加了一个group name（公开群组） 或者 group id（针对隐私群租） 时，如果bot并不在该群组中，则bot无法进行工作，报错提示用户添加bot到该群组中
10：有关telegram bot的配置单独放在一个文件中




**设计步骤**

1. 建立主脚本：初始化Telegram Bot设置，配置指令处理函数。  
2. 用户白名单、群组列表、日志配置等可在配置文件中管理，主脚本读取。  
3. 日志功能：对每次调用都记录执行时间、指令、结果。  
4. 指令实现：  
   - /summary <消息条数>：读取消息、生成TXT存档，发送到模型API请求总结，返回结果后再删除TXT。  
   - /setapikey、/setapibase、/addgroup等：用于配置API和群组。  
   - 对不在白名单的用户返回拒绝提示。  
5. 定时任务：每日凌晨清理TXT文件或执行其它周期性维护。  
6. 错误处理：若总结多次失败，记录次数并提示用户，超限即终止操作。  

